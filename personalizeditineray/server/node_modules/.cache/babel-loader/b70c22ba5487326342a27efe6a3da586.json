{"ast":null,"code":"var _jsxFileName = \"/Users/yingxiachen/Documents/GitHub/MERN/lukeapiwalker/src/starwar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Starwarapi = () => {\n  _s();\n\n  const [selectedPerson, setSelectedPerson] = useState(\"\");\n  const [selectedPlanet, setSelectedPlanet] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [selectedData, setSelectedData] = useState(\"\");\n\n  const handleData = e => {\n    setSelectedData(e.target.value);\n  };\n\n  const dataID = e => {\n    setSelectedId(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (selectedData === \"selectedPerson\" && selectedData === \"selectedId\") axios.get(`https://swapi.dev/api/selectPerson/${selectedId}`).then(response => {\n      setSelectedPerson(response.data.results);\n    });\n    if (selectedData === \"selectPlanet\" && selectedData === \"selectedId\") axios.get(`https://swapi.dev/api/selectPlanet/${selectedId}`).then(response => {\n      setSelectedPlanet(response.data.results);\n    });\n  };\n};\n\n_s(Starwarapi, \"R1WKhj3qy2THjFwn+w3bWzVqKaE=\");\n\n_c = Starwarapi;\n\n/*#__PURE__*/\n_jsxDEV(BrowserRouter, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        Onchange: handleData,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: selectedPerson,\n          children: \"selectedPerson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: selectedPlanet,\n          children: \"selectedPlanet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: dataID,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"switch\", {\n    children: [/*#__PURE__*/_jsxDEV(\"route\", {\n      path: \"/people/:id\",\n      children: /*#__PURE__*/_jsxDEV(Starwarapi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"route\", {\n      path: \"/planet/:id\",\n      children: /*#__PURE__*/_jsxDEV(Starwarapi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 1\n}, this);\n\nexport default Starwarapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Starwarapi\");","map":{"version":3,"sources":["/Users/yingxiachen/Documents/GitHub/MERN/lukeapiwalker/src/starwar.js"],"names":["React","useState","axios","BrowserRouter","Starwarapi","selectedPerson","setSelectedPerson","selectedPlanet","setSelectedPlanet","selectedId","setSelectedId","selectedData","setSelectedData","handleData","e","target","value","dataID","handleSubmit","get","then","response","data","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,QAEO,kBAFP;;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMY,UAAU,GAAIC,CAAD,IAAO;AACtBF,IAAAA,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAGA,QAAMC,MAAM,GAAIH,CAAD,IAAO;AAClBJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAGA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AACxB,QAAIH,YAAY,KAAK,gBAAjB,IAAqCA,YAAY,KAAK,YAA1D,EACIT,KAAK,CAACiB,GAAN,CAAW,sCAAqCV,UAAW,EAA3D,EACKW,IADL,CACUC,QAAQ,IAAI;AAAEf,MAAAA,iBAAiB,CAACe,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAjB;AAA0C,KADlE;AAEJ,QAAIZ,YAAY,KAAK,cAAjB,IAAmCA,YAAY,KAAK,YAAxD,EACIT,KAAK,CAACiB,GAAN,CAAW,sCAAqCV,UAAW,EAA3D,EACKW,IADL,CACUC,QAAQ,IAAI;AAAEb,MAAAA,iBAAiB,CAACa,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAjB;AAA0C,KADlE;AAEP,GAPD;AAQH,CApBD;;GAAMnB,U;;KAAAA,U;;AAuBN;AAAA,QAAC,aAAD;AAAA,0BACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEc,YAAhB;AAAA,8BACI;AAAQ,QAAA,QAAQ,EAAEL,UAAlB;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAER,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAEE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,QAAQ,EAAEU,MAAjB;AAAyB,QAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAWI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,eAAed,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n    BrowserRouter,\n} from \"react-router-dom\";\n\nconst Starwarapi = () => {\n    const [selectedPerson, setSelectedPerson] = useState(\"\");\n    const [selectedPlanet, setSelectedPlanet] = useState(\"\");\n    const [selectedId, setSelectedId] = useState(\"\")\n    const [selectedData, setSelectedData] = useState(\"\")\n\n    const handleData = (e) => {\n        setSelectedData(e.target.value)\n    }\n    const dataID = (e) => {\n        setSelectedId(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        if (selectedData === \"selectedPerson\" && selectedData === \"selectedId\")\n            axios.get(`https://swapi.dev/api/selectPerson/${selectedId}`)\n                .then(response => { setSelectedPerson(response.data.results) })\n        if (selectedData === \"selectPlanet\" && selectedData === \"selectedId\")\n            axios.get(`https://swapi.dev/api/selectPlanet/${selectedId}`)\n                .then(response => { setSelectedPlanet(response.data.results) })\n    }\n}\n\n\n<BrowserRouter>\n    <div>\n        <form onSubmit={handleSubmit}>\n            <select Onchange={handleData}>\n                <option value={selectedPerson}>selectedPerson</option>\n                <option value={selectedPlanet}>selectedPlanet</option>\n            </select>\n            <input onChange={dataID} type=\"number\" />\n            <button onClick={handleSubmit}>Search</button>\n        </form>\n    </div>\n    <switch>\n        <route path=\"/people/:id\">\n            <Starwarapi />\n        </route>\n        <route path=\"/planet/:id\">\n            <Starwarapi />\n        </route>\n    </switch>\n</BrowserRouter>\n\n\nexport default Starwarapi;\n"]},"metadata":{},"sourceType":"module"}