{"ast":null,"code":"var _jsxFileName = \"/Users/yingxiachen/Documents/GitHub/MERN/lukeapiwalker/src/starwar.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Starwarapi = () => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [reponseData, setResponseData] = useState([]);\n\n  const People = props => {\n    _s();\n\n    useEffect(() => {\n      axios.get(`https://swapi.dev/api/people/\" +id`).then(res => {\n        setResponseData(res.data.people);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n    return `<div>{people}</div>`;\n  };\n\n  _s(People, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const Planets = props => {\n    _s2();\n\n    useEffect(() => {\n      axios.get(`https://swapi.dev/api/planet/\" +id`).then(res => {\n        setResponseData(res.data.planet);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n    return `<div>{planet}</div>`;\n  };\n\n  _s2(Planets, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  /*#__PURE__*/\n  _jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => history.push(`/${selectedEntity}/${selectedId}`),\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          Onchange: e => {},\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"people\",\n            children: \"People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"planet\",\n            children: \"Planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"switch\", {\n      children: [/*#__PURE__*/_jsxDEV(\"route\", {\n        path: \"/people/:id\",\n        children: /*#__PURE__*/_jsxDEV(People, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"route\", {\n        path: \"/planet/:id\",\n        children: /*#__PURE__*/_jsxDEV(Planets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(Starwarapi, \"t8cuvrQ/qodBGkEAQSmJ99KcfQs=\");\n\n_c = Starwarapi;\nexport default Starwarapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Starwarapi\");","map":{"version":3,"sources":["/Users/yingxiachen/Documents/GitHub/MERN/lukeapiwalker/src/starwar.js"],"names":["React","useEffect","useState","axios","BrowserRouter","Link","Starwarapi","selectedEntity","setSelectedEntity","selectedId","setSelectedId","reponseData","setResponseData","People","props","get","then","res","data","people","catch","err","console","log","Planets","planet","e","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,IAFJ,QAGO,kBAHP;;;AAKA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;AAAA;;AACrB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,WAAD,EAAcC,eAAd,IAAiCV,QAAQ,CAAC,EAAD,CAA/C;;AAEA,QAAMW,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtBb,IAAAA,SAAS,CAAC,MAAM;AACZE,MAAAA,KAAK,CAACY,GAAN,CAAW,oCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTL,QAAAA,eAAe,CAACK,GAAG,CAACC,IAAJ,CAASC,MAAV,CAAf;AACH,OAHL,EAGOC,KAHP,CAGaC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OALL;AAMH,KAPQ,CAAT;AAQA,WAAQ,qBAAR;AACH,GAVD;;AALqB,KAKfR,MALe;;AAiBrB,QAAMW,OAAO,GAAIV,KAAD,IAAW;AAAA;;AACvBb,IAAAA,SAAS,CAAC,MAAM;AACZE,MAAAA,KAAK,CAACY,GAAN,CAAW,oCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTL,QAAAA,eAAe,CAACK,GAAG,CAACC,IAAJ,CAASO,MAAV,CAAf;AACH,OAHL,EAGOL,KAHP,CAGaC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OALL;AAMH,KAPQ,CAAT;AAQA,WAAQ,qBAAR;AACH,GAVD;;AAjBqB,MAiBfG,OAjBe;;AA+BrB;AAAA,UAAC,aAAD;AAAA,4BACI;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAGE,CAAD,IACZC,OAAO,CAACC,IAAR,CAAc,IAAGrB,cAAe,IAAGE,UAAW,EAA9C,CADJ;AAAA,gCAEI;AAAQ,UAAA,QAAQ,EAAGiB,CAAD,IAAO,CAExB,CAFD;AAAA,kCAII;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI;AAAO,UAAA,QAAQ;AAAf;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,aAAZ;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAC,aAAZ;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBH,CAxDD;;IAAMpB,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    BrowserRouter,\n    Link\n} from \"react-router-dom\";\n\nconst Starwarapi = () => {\n    const [selectedEntity, setSelectedEntity] = useState(\"\");\n    const [selectedId, setSelectedId] = useState(\"\");\n    const [reponseData, setResponseData] = useState([])\n\n    const People = (props) => {\n        useEffect(() => {\n            axios.get(`https://swapi.dev/api/people/\" +id`)\n                .then(res => {\n                    setResponseData(res.data.people);\n                }).catch(err => {\n                    console.log(err);\n                });\n        })\n        return `<div>{people}</div>`\n    }\n\n    const Planets = (props) => {\n        useEffect(() => {\n            axios.get(`https://swapi.dev/api/planet/\" +id`)\n                .then(res => {\n                    setResponseData(res.data.planet);\n                }).catch(err => {\n                    console.log(err);\n                });\n        })\n        return `<div>{planet}</div>`\n    }\n\n\n\n    <BrowserRouter>\n        <div>\n            <form onSubmit={(e) =>\n                history.push(`/${selectedEntity}/${selectedId}`)}>\n                <select Onchange={(e) => {\n\n                }\n                }>\n                    <option value=\"people\">People</option>\n                    <option value=\"planet\">Planet</option>\n                </select>\n                <input onChange />\n                <button>Search</button>\n            </form>\n        </div>\n        <switch>\n            <route path=\"/people/:id\">\n                <People />\n            </route>\n            <route path=\"/planet/:id\">\n                <Planets />\n            </route>\n        </switch>\n    </BrowserRouter>\n\n}\n\nexport default Starwarapi;\n"]},"metadata":{},"sourceType":"module"}