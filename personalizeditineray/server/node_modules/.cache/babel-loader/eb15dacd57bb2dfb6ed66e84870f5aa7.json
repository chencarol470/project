{"ast":null,"code":"var _jsxFileName = \"/Users/yingxiachen/Documents/GitHub/MERN/tabs/src/components/Color.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Color = () => {\n  _s();\n\n  const [specs, setSpecs] = useState({\n    color: \"\",\n    dimension: \"\"\n  });\n  const [allBoxes, setAllBoxes] = useState([]);\n\n  const changeHandler = event => {\n    setSpecs({ ...specs,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setAllBoxes([...allBoxes, specs]);\n    console.log(\"submitHandler\");\n    setSpecs({\n      color: \"\",\n      dimension: \"\"\n    });\n    console.log(\"allBoxes\");\n    console.log(allBoxes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Color \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"color\",\n          onChange: changeHandler,\n          value: specs.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dimension \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"dimension\",\n          onChange: changeHandler,\n          value: specs.dimension\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        display: \"flex\",\n        flexDirection: \"row\",\n        children: allBoxes.map(box => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex-wrap\",\n              flexDirection: \"row\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: box.color,\n                width: box.dimension,\n                height: box.dimension\n              },\n              children: box.dimension\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Color, \"mbmF8evIKIzNiPHLOtKo2ZdnhLg=\");\n\n_c = Color;\nexport default Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/yingxiachen/Documents/GitHub/MERN/tabs/src/components/Color.js"],"names":["React","useState","Color","specs","setSpecs","color","dimension","allBoxes","setAllBoxes","changeHandler","event","target","name","value","submitHandler","preventDefault","console","log","map","box","display","flexDirection","backgroundColor","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AAC/BI,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,SAAS,EAAE;AAFoB,GAAD,CAAlC;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACO,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF7B,KAAD,CAAR;AAIH,GALD;;AAMA,QAAMC,aAAa,GAAIJ,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACK,cAAN;AACAP,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcJ,KAAd,CAAD,CAAX;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,SAAS,EAAE;AAFN,KAAD,CAAR;AAIAU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACH,GAVD;;AAYA,sBACI;AAAA,2BAEI;AAAM,MAAA,QAAQ,EACVO,aADJ;AAAA,8BAGI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,QAAQ,EAAEL,aAA1C;AAAyD,UAAA,KAAK,EAAEN,KAAK,CAACE;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,WAAxB;AAAoC,UAAA,QAAQ,EAAEI,aAA9C;AAA6D,UAAA,KAAK,EAAEN,KAAK,CAACG;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAUI;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,aAAa,EAAC,KAAlC;AAAA,kBACKC,QAAQ,CAACW,GAAT,CAAaC,GAAG,IAAI;AACjB,8BAAO;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,WAAX;AAAwBC,cAAAA,aAAa,EAAE;AAAvC,aAAZ;AAAA,mCACH;AAAK,cAAA,KAAK,EAAE;AAAEC,gBAAAA,eAAe,EAAEH,GAAG,CAACd,KAAvB;AAA8BkB,gBAAAA,KAAK,EAAEJ,GAAG,CAACb,SAAzC;AAAoDkB,gBAAAA,MAAM,EAAEL,GAAG,CAACb;AAAhE,eAAZ;AAAA,wBAA0Fa,GAAG,CAACb;AAA9F;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,kBAAP;AAIH,SALA;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAwBH,CAjDD;;GAAMJ,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\n\n\nconst Color = () => {\n    const [specs, setSpecs] = useState({\n        color: \"\",\n        dimension: \"\",\n    })\n    const [allBoxes, setAllBoxes] = useState([])\n\n    const changeHandler = (event) => {\n        setSpecs({\n            ...specs,\n            [event.target.name]: event.target.value\n        })\n    };\n    const submitHandler = (event) => {\n        event.preventDefault();\n        setAllBoxes([...allBoxes, specs])\n        console.log(\"submitHandler\");\n        setSpecs({\n            color: \"\",\n            dimension: \"\"\n        })\n        console.log(\"allBoxes\");\n        console.log(allBoxes);\n    }\n\n    return (\n        <>\n            {/* if i want to show more than one thing, I am to wrap it using empty diamond tag <> and close it</>.  */}\n            <form onSubmit={\n                submitHandler\n            }>\n                <div>\n                    <label>Color </label>\n                    <input type=\"text\" name=\"color\" onChange={changeHandler} value={specs.color} />\n                    <label>Dimension </label>\n                    <input type=\"text\" name=\"dimension\" onChange={changeHandler} value={specs.dimension} />\n                    <button type=\"submit\">Add</button>\n                </div>\n                <div display=\"flex\" flexDirection=\"row\">\n                    {allBoxes.map(box => {\n                        return <div style={{ display: \"flex-wrap\", flexDirection: \"row\" }}>\n                            <div style={{ backgroundColor: box.color, width: box.dimension, height: box.dimension }}>{box.dimension}\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </form >\n        </>\n    );\n};\nexport default Color"]},"metadata":{},"sourceType":"module"}